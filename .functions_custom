#!/bin/bash

docker-images-clean() {
  docker rmi $(docker images -q --filter "dangling=true")
}

docker-volumes-clean() {
	docker volume rm $(docker volume ls -q)
}

add-angular-service() {
  if [ -z "${1}" ]; then
		echo "ERROR: no module name specifed."
		return 1
	fi

  mkdir -p modules/"$1"/services
  mkdir -p test/"$1"/services
  touch modules/"$1"/services/"$1".service.js
  touch modules/"$1"/"$1".module.js
  touch test/"$1"/services/"$1".service.spec.js
}

add-angular-controller() {
  if [ -z "${1}" ]; then
		echo "ERROR: no module name specifed."
		return 1
	fi

  mkdir -p app/modules/"$1"/controllers
  mkdir -p app/modules/"$1"/views
  mkdir -p app/styles/"$1"
  mkdir -p test/spec/modules/"$1"
  touch app/modules/"$1"/controllers/"$1".controller.js
  touch app/modules/"$1"/views/"$1".html
  touch app/modules/"$1"/"$1".module.js
  touch app/styles/"$1"/_"$1".scss
  touch test/spec/modules/"$1"/"$1".controller.spec.js

  echo "Module files created. Please go on to modify "
  echo "~/app/modules/app.js,"
  echo "~/app/index.html,"
  echo "~/app/modules/tileBack/tileBack.module.js and "
  echo "~/test/spec/karma.conf.js"
}

gen-keys() {
  openssl genrsa -out key.pem
  openssl req -new -config gen.conf -key key.pem -out csr.pem
  openssl x509 -req -days 9999 -in csr.pem -signkey key.pem -out cert.pem
  rm csr.pem
}

check-proxy-config() {
  docker run -it --rm --name haproxy-syntax-check tectac/proxy haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg
}

docker-containers-stop() {
  docker stop $(docker ps -a -q)
}

docker-containers-rm() {
  docker-containers-stop
  docker rm $(docker ps -a -q)
}

cd-main() {
  cd ~/Desktop/git/MaintenanceReportWebApp
}

cd-notes() {
	cd ~/Desktop/git/notes
}

cd-tracker() {
	cd ~/Desktop/git/src/github.com/alexhokl/go-ali-expense-tracker
}

cd-go() {
  cd ~/Desktop/git/src/github.com/alexhokl
}

go-dev() {
  docker run --rm --name go-dev -v /Users/alex/Desktop/git/:/go -it golang bash
}

dotnet-dev() {
  docker run --rm --name dotnet-dev -v `pwd`:/src -it microsoft/dotnet bash
}

npm-clean-and-build() {
  rm -rf ./node_modules
  npm cache clean
  npm install
  npm run build
}

ssh-gen-cert() {
	if [ -z "${1}" ]; then
		echo "ERROR: no key name specifed."
		return 1
	fi

	if [ -z "${2}" ]; then
		echo "ERROR: no server specified (format: user@server)."
		return 1
	fi

	ssh-keygen -t rsa -b 2048 -f "$1" -v
	ssh-copy-id -i "$1".pub "$2"
	mv "$1" "$1".pem
	chmod 400 "$1".pem
	ssh -i "$1".pem "$2"
}
